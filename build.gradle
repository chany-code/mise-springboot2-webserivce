buildscript{//이 프로젝트의 플러그인 의존성 관리를 위한 설정
    ext { //ext는 build.gradle에서 사용하는 전역변수 설
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories{
        mavenCentral()
        jcenter()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
//위에 선언한 플러그인 의존성들을 용할 것인지를 결정
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'//스프링 부트의 의존성들을 관리해주는 *필수* 플러그인

/* 위에 apply pulgin에서 java 적용함
plugins {
    id 'java'
}*/

group 'com.chany.mise'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {//의존성코드는 특정 버전을 명시하지 않아야 "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"을 따라감
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.projectlombok:lombok')
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')//스프링 부트용 Spring Data Jpa 추상화 라이브러리. 스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리 버전관리
    compile('com.h2database:h2')//h2 :인모메리 관계형 데이터베이스. 별도 설치없이 프로젝트 의존성만으로 관리. 메모리에서 실행되며 어플리케이션 재시작시 초기화
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}